<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo2.dao.UsersDao">

    <resultMap type="com.example.demo2.entity.Users" id="UsersMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="source" column="source" jdbcType="SMALLINT"/>
        <result property="desc" column="desc" jdbcType="BINARY"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="INTEGER"/>
    </resultMap>



    <select id="queryById" resultMap="UsersMap">
        select
          id, name, sex, age, gmt_create, source, `desc`, phone, parent_id
        from users
        where id = #{id}
    </select>

    <select id="queryAllByLimit" resultMap="UsersMap">
        select
          id, name, sex, age, gmt_create, source, `desc`, phone, parent_id
        from users   limit  #{offset}, #{limit}
    </select>

    <select id="fenyeLimit" resultMap="UsersMap" >
        select
          id, name, sex, age, gmt_create, source, `desc`, phone, parent_id
        from users
        where id>(select id from users order by id  limit  #{offset}, 1)
        limit 0, #{limit}
    </select>

    <select id="selectByShang" resultMap="UsersMap">
        select
          id, name, sex, age, gmt_create, source, `desc`, phone, parent_id
        from users u left join users s on  u.id=s.parent_id  where id =#{id}
    </select>
    <select id="queryAll" resultMap="UsersMap">
        select
        id, name, sex, age, gmt_create, source, `desc`, phone, parent_id
        from users
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="gmtCreate != null">
                and gmt_create = #{gmtCreate}
            </if>
            <if test="source != null">
                and source = #{source}
            </if>
            <if test="desc != null">
                and `desc` = #{desc}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="parentId != null">
                and parent_id = #{parentId}
            </if>
        </where>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into users(name,age)
        values (#{name},  #{age})
    </insert>

    <update id="update">
        update users
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="source != null">
                source = #{source},
            </if>
            <if test="desc != null">
                `desc` = #{desc},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from users where id = #{id}
    </delete>


</mapper>